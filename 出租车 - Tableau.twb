<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0520.1152                                -->
<workbook source-build='9.3.2 (9300.16.0520.1152)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.3'>
      <aliases enabled='yes' />
      <column caption='销售额增长率' datatype='integer' name='[区域 参数]' param-domain-type='range' role='measure' type='quantitative' value='16'>
        <calculation class='tableau' formula='16' />
        <range granularity='5' max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='全国订单明细 (某公司销售数据)' inline='true' name='excel-direct.1raade20tond451ds45fp0560lyc' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码\出租车 - Tableau.twb 个文件\Data\样例数据\某公司销售数据.xls' interpretationMode='0' password='' server='' validate='no'>
        <relation name='全国订单明细' table='[全国订单明细$]' type='table'>
          <columns gridOrigin='A1:S8569:no:A1:S8569:0' header='yes' outcome='2'>
            <column datatype='integer' name='订单号' ordinal='0' />
            <column datatype='date' name='订单日期' ordinal='1' />
            <column datatype='string' name='顾客姓名' ordinal='2' />
            <column datatype='string' name='订单等级' ordinal='3' />
            <column datatype='integer' name='订单数量' ordinal='4' />
            <column datatype='real' name='销售额' ordinal='5' />
            <column datatype='real' name='折扣点' ordinal='6' />
            <column datatype='string' name='运输方式' ordinal='7' />
            <column datatype='real' name='利润额' ordinal='8' />
            <column datatype='real' name='单价' ordinal='9' />
            <column datatype='real' name='运输成本' ordinal='10' />
            <column datatype='string' name='区域' ordinal='11' />
            <column datatype='string' name='省份' ordinal='12' />
            <column datatype='string' name='城市' ordinal='13' />
            <column datatype='string' name='产品类别' ordinal='14' />
            <column datatype='string' name='产品子类别' ordinal='15' />
            <column datatype='string' name='产品名称' ordinal='16' />
            <column datatype='string' name='产品包箱' ordinal='17' />
            <column datatype='date' name='运送日期' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>订单号</remote-name>
            <remote-type>20</remote-type>
            <local-name>[订单号]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>订单号</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单日期</remote-name>
            <remote-type>7</remote-type>
            <local-name>[订单日期]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>订单日期</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>顾客姓名</remote-name>
            <remote-type>130</remote-type>
            <local-name>[顾客姓名]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>顾客姓名</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单等级</remote-name>
            <remote-type>130</remote-type>
            <local-name>[订单等级]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>订单等级</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单数量</remote-name>
            <remote-type>20</remote-type>
            <local-name>[订单数量]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>订单数量</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>销售额</remote-name>
            <remote-type>5</remote-type>
            <local-name>[销售额]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>销售额</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>折扣点</remote-name>
            <remote-type>5</remote-type>
            <local-name>[折扣点]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>折扣点</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>运输方式</remote-name>
            <remote-type>130</remote-type>
            <local-name>[运输方式]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>运输方式</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>利润额</remote-name>
            <remote-type>5</remote-type>
            <local-name>[利润额]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>利润额</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>单价</remote-name>
            <remote-type>5</remote-type>
            <local-name>[单价]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>单价</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>运输成本</remote-name>
            <remote-type>5</remote-type>
            <local-name>[运输成本]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>运输成本</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>区域</remote-name>
            <remote-type>130</remote-type>
            <local-name>[区域]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>区域</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>省份</remote-name>
            <remote-type>130</remote-type>
            <local-name>[省份]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>省份</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>城市</remote-name>
            <remote-type>130</remote-type>
            <local-name>[城市]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>城市</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品类别]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>产品类别</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品子类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品子类别]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>产品子类别</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品名称</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品名称]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>产品名称</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品包箱</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品包箱]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>产品包箱</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>运送日期</remote-name>
            <remote-type>7</remote-type>
            <local-name>[运送日期]</local-name>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias>运送日期</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[全国订单明细]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S8569:no:A1:S8569:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='利润额（组）' datatype='string' name='[Calculation_447263787808231424]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [利润额]&lt;=-600 then &apos;&lt;=-600&apos;&#13;&#10;ELSEIF [利润额]&gt;-600 and [利润额]&lt;=0 then &apos;-599~0&apos;&#13;&#10;ELSEIF [利润额]&gt;0 and [利润额]&lt;=600 then &apos;1~600&apos;&#13;&#10;ELSEIF [利润额]&gt;600 and [利润额]&lt;=3000 then &apos;601~3000&apos;&#13;&#10;ELSE &apos;&gt;3000&apos;&#13;&#10;END' />
      </column>
      <column caption='聚类' datatype='integer' name='[Calculation_447263787849285633]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_INT( &apos;&#13;&#10;  result &lt;- kmeans(data.frame(.arg1, .arg2), &apos; &#13;&#10;    + str(4) &#13;&#10;    + &apos;); &#13;&#10;  result$cluster&apos;, &#13;&#10;&#13;&#10;sum([销售额]), &#13;&#10;sum([利润额]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='负利润额' datatype='real' name='[Calculation_447263787856642050]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[利润额]' />
      </column>
      <column caption='显示或隐藏省份' datatype='string' name='[Calculation_447263787876794373]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='if {COUNTD([省份])}&gt;1 then [省份] END' />
      </column>
      <column caption='显示或隐藏城市' datatype='string' name='[Calculation_447263787877228550]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='if {COUNTD([省份])}=1 then [城市] END' />
      </column>
      <column caption='预测销售额' datatype='real' name='[Calculation_568579502415593472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[销售额]*(1+[Parameters].[区域 参数]/100)' />
      </column>
      <column caption='利润率' datatype='real' name='[Calculation_568579502419861505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([利润额])/SUM([销售额])' />
      </column>
      <column caption='订单量' datatype='integer' name='[Calculation_568579502421356546]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([产品类别])' />
      </column>
      <column caption='订单反应时间' datatype='integer' name='[Calculation_568579502452105219]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&quot;day&quot;,[订单日期],[运送日期])' />
      </column>
      <column caption='计算 1' datatype='integer' name='[Calculation_568579502456221700]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_568579502452105219]' />
      </column>
      <column caption='校正利润率' datatype='real' name='[Calculation_568579502457303045]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(if [产品类别]=&quot;家具产品&quot; then [利润额]+[运输成本] &#13;&#10;ELSEIF  [产品类别]=&quot;办公产品&quot; then [利润额] &#13;&#10;else [利润额] END&#13;&#10;)/SUM([销售额])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[产品子类别 (组)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[产品子类别]'>
          <bin value='&quot;剪刀，尺子，锯&quot;'>
            <value>&quot;剪刀，尺子，锯&quot;</value>
            <value>&quot;书架&quot;</value>
            <value>&quot;椅子&quot;</value>
            <value>&quot;桌子&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[产品子类别]' role='dimension' type='nominal' />
      <column datatype='integer' name='[利润额 (数据桶)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[利润额]' peg='0' size='500' />
        <aliases>
          <alias key='-1' value='-500~-1' />
          <alias key='0' value='0~499' />
        </aliases>
      </column>
      <column datatype='real' name='[利润额]' role='measure' type='quantitative' />
      <column datatype='string' name='[区域]' role='dimension' type='nominal' />
      <column datatype='string' name='[省份]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[订单号]' role='dimension' type='ordinal' />
      <column datatype='date' name='[订单日期]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[销售额 (数据桶)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[销售额]' peg='0' size='1656' />
      </column>
      <column datatype='real' name='[销售额]' role='measure' type='quantitative' />
      <column datatype='string' name='[顾客姓名]' role='dimension' type='nominal' />
      <column-instance column='[利润额]' derivation='Sum' name='[cum:sum:利润额:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[销售额]' derivation='Sum' name='[diff:sum:销售额:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[下单天数大于30的顾客]' derivation='InOut' name='[io:下单天数大于30的顾客:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='一般顾客' />
          <alias key='true' value='下单天数大于30的顾客' />
        </aliases>
      </column-instance>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[利润额]' derivation='Sum' name='[pcto:cum:sum:利润额:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[excel-direct.1raade20tond451ds45fp0560lyc].[顾客姓名]' ordering-type='Field' type='CumTotal' />
        <table-calc ordering-field='[excel-direct.1raade20tond451ds45fp0560lyc].[顾客姓名]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_568579502415593472]' derivation='Sum' name='[sum:Calculation_568579502415593472:qk]' pivot='key' type='quantitative' />
      <column-instance column='[利润额]' derivation='Sum' name='[sum:利润额:qk]' pivot='key' type='quantitative' />
      <column-instance column='[销售额]' derivation='Sum' name='[sum:销售额:qk]' pivot='key' type='quantitative' />
      <column-instance column='[订单日期]' derivation='Month-Trunc' name='[tmn:订单日期:ok]' pivot='key' type='ordinal' />
      <group caption='操作(区域,月(订单日期))' hidden='true' name='[Action (区域,月(订单日期))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[区域]' />
          <groupfilter function='level-members' level='[tmn:订单日期:ok]' />
        </groupfilter>
      </group>
      <group caption='操作(省份)' hidden='true' name='[Action (省份)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[省份]' />
        </groupfilter>
      </group>
      <group name='[下单天数大于30的顾客]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='COUNTD([订单日期]) &gt; 30' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[顾客姓名]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group name='[订单量前15的顾客]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[顾客姓名]' member='&quot;包婧&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;高瑞光&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;胡炎&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;吕果&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;沈鸽&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;魏学涛&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;肖海峰&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;邢雁&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;杨高宁&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;张颖&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;张玉&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;赵子武&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;郑则强&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;周桐&quot;' />
          <groupfilter function='member' level='[顾客姓名]' member='&quot;周文龙&quot;' />
        </groupfilter>
      </group>
      <group caption='下单天数大于30且订单量前15的顾客' delimiter=',' name='[集 1]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[下单天数大于30的顾客]' function='reference' />
          <groupfilter field='[订单量前15的顾客]' function='reference' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='产品类别层次'>
          <field>[产品类别]</field>
          <field>[产品子类别]</field>
          <field>[产品名称]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.340909' group-percentage='0.159091' measure-ordering='alphabetic' measure-percentage='0.340909' parameter-percentage='0.159091' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;实际&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;估计&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:下单天数大于30的顾客:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>false</bucket>
            </map>
            <map to='#d62728'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1raade20tond451ds45fp0560lyc].[cum:sum:利润额:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1raade20tond451ds45fp0560lyc].[pcto:cum:sum:利润额:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.1raade20tond451ds45fp0560lyc].[sum:利润额:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.1raade20tond451ds45fp0560lyc].[sum:Calculation_568579502415593472:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1raade20tond451ds45fp0560lyc].[diff:sum:销售额:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.1raade20tond451ds45fp0560lyc].[sum:销售额:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;实际&quot;</bucket>
            <bucket>&quot;估计&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='销售额增长率' datatype='integer' name='[区域 参数]' param-domain-type='range' role='measure' type='quantitative' value='16'>
          <calculation class='tableau' formula='16' />
          <range granularity='5' max='100' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='咖啡销售订单 (某咖啡公司销售数据)' inline='true' name='excel-direct.0448cgq12htvcj1gbrk6y0h80whj' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码\出租车 - Tableau.twb 个文件\Data\样例数据\某咖啡公司销售数据.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='咖啡销售订单' table='[咖啡销售订单$]' type='table'>
          <columns gridOrigin='A1:N4249:no:A1:N4249:0' header='yes' outcome='6'>
            <column datatype='date' name='订单日期' ordinal='0' />
            <column datatype='string' name='市场类别' ordinal='1' />
            <column datatype='string' name='区域' ordinal='2' />
            <column datatype='string' name='产品类别' ordinal='3' />
            <column datatype='string' name='产品名称' ordinal='4' />
            <column datatype='integer' name='预计销售成本' ordinal='5' />
            <column datatype='integer' name='预计毛利' ordinal='6' />
            <column datatype='integer' name='预计利润' ordinal='7' />
            <column datatype='integer' name='预计销售额' ordinal='8' />
            <column datatype='integer' name='销售成本' ordinal='9' />
            <column datatype='integer' name='存货' ordinal='10' />
            <column datatype='integer' name='毛利' ordinal='11' />
            <column datatype='integer' name='利润额' ordinal='12' />
            <column datatype='integer' name='销售额' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>订单日期</remote-name>
            <remote-type>7</remote-type>
            <local-name>[订单日期]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>订单日期</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>市场类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[市场类别]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>市场类别</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>区域</remote-name>
            <remote-type>130</remote-type>
            <local-name>[区域]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>区域</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品类别]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>产品类别</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品名称</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品名称]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>产品名称</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>预计销售成本</remote-name>
            <remote-type>20</remote-type>
            <local-name>[预计销售成本]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>预计销售成本</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>预计毛利</remote-name>
            <remote-type>20</remote-type>
            <local-name>[预计毛利]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>预计毛利</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>预计利润</remote-name>
            <remote-type>20</remote-type>
            <local-name>[预计利润]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>预计利润</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>预计销售额</remote-name>
            <remote-type>20</remote-type>
            <local-name>[预计销售额]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>预计销售额</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>销售成本</remote-name>
            <remote-type>20</remote-type>
            <local-name>[销售成本]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>销售成本</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>存货</remote-name>
            <remote-type>20</remote-type>
            <local-name>[存货]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>存货</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>毛利</remote-name>
            <remote-type>20</remote-type>
            <local-name>[毛利]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>毛利</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>利润额</remote-name>
            <remote-type>20</remote-type>
            <local-name>[利润额]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>利润额</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>销售额</remote-name>
            <remote-type>20</remote-type>
            <local-name>[销售额]</local-name>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias>销售额</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[咖啡销售订单]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N4249:no:A1:N4249:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='完成与否' datatype='boolean' name='[Calculation_447263787864850436]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([销售额])&gt;SUM([预计销售额])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.488889' measure-ordering='alphabetic' measure-percentage='0.277778' parameter-percentage='0.233333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='terpos' inline='true' name='textscan.1i3s1it1nwpqtp19hldx80iklb4l' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/Result' filename='terpos.csv' password='' server=''>
        <relation name='terpos.csv' table='[terpos#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[terpos.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[terpos.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[terpos.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[terpos.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[terpos.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='hh' datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='long' datatype='real' name='[F2]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='lat' datatype='real' name='[F3]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='%' datatype='real' name='[F4]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[F2]' derivation='None' name='[none:F2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F3]' derivation='None' name='[none:F3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F4]' derivation='None' name='[none:F4:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[排除(%,lat,long)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:F4:qk]' />
          <groupfilter function='level-members' level='[none:F3:qk]' />
          <groupfilter function='level-members' level='[none:F2:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.137255' measure-ordering='alphabetic' measure-percentage='0.72549' parameter-percentage='0.137255' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
        <field-sort-custom-order field='F3' />
        <field-sort-custom-order field='F4' />
      </field-sort-info>
    </datasource>
    <datasource caption='tER' inline='true' name='textscan.1sdr24p14kcpso1fimequ1ka7hif' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/结果er表' filename='tER.csv' password='' server=''>
        <relation name='tER.csv' table='[tER#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
            <column datatype='real' name='F6' ordinal='5' />
            <column datatype='real' name='F7' ordinal='6' />
            <column datatype='real' name='F8' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tER.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='date' datatype='integer' name='[F2]' role='measure' type='quantitative' />
      <column caption='hh' datatype='integer' name='[F3]' role='measure' type='quantitative' />
      <column caption='long' datatype='real' name='[F4]' role='measure' type='quantitative' />
      <column caption='lat' datatype='real' name='[F5]' role='measure' type='quantitative' />
      <column caption='d0' datatype='real' name='[F6]' role='measure' type='quantitative' />
      <column caption='d' datatype='real' name='[F7]' role='measure' type='quantitative' />
      <column caption='%' datatype='real' name='[F8]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.183521' measure-ordering='alphabetic' measure-percentage='0.640449' parameter-percentage='0.17603' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
        <field-sort-custom-order field='F3' />
        <field-sort-custom-order field='F4' />
        <field-sort-custom-order field='F5' />
        <field-sort-custom-order field='F6' />
        <field-sort-custom-order field='F7' />
        <field-sort-custom-order field='F8' />
      </field-sort-info>
    </datasource>
    <datasource caption='tvlr' inline='true' name='textscan.1o8jb1g1a5f0fb12rdfez1ekbx6e' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/C.用经纬度，根据某时段某路上车数及即时速度，估计出整条路上汽车的平均速度' filename='tvlr.csv' password='' server=''>
        <relation name='tvlr.csv' table='[tvlr#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tvlr.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[tvlr.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[tvlr.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[tvlr.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[tvlr.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tvlr.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.267782' measure-ordering='alphabetic' measure-percentage='0.539749' parameter-percentage='0.192469' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='粤B41W57' inline='true' name='textscan.09a7h9t0bssy2x12mqkvz0enz22d' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/A.用经纬度，用tableau分析某车某天行驶路线' filename='粤B41W57.txt' password='' server=''>
        <relation name='粤B41W57.txt' table='[粤B41W57#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='datetime' name='time' ordinal='1' />
            <column datatype='real' name='jd' ordinal='2' />
            <column datatype='real' name='wd' ordinal='3' />
            <column datatype='integer' name='status' ordinal='4' />
            <column datatype='integer' name='v' ordinal='5' />
            <column datatype='integer' name='angle' ordinal='6' />
            <column datatype='string' name='F8' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jd]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>jd</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wd]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>wd</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>20</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v</remote-name>
            <remote-type>20</remote-type>
            <local-name>[v]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>v</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>angle</remote-name>
            <remote-type>20</remote-type>
            <local-name>[angle]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>angle</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <hidden>true</hidden>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[粤B41W57.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' hidden='true' name='[F8]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[jd]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[status]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[wd]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column-instance column='[status]' derivation='Attribute' name='[attr:status:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.233333' measure-ordering='alphabetic' measure-percentage='0.533333' parameter-percentage='0.233333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:status:ok]' type='palette'>
            <map to='#006ba4'>
              <bucket>0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='terdt' inline='true' name='textscan.02k4asg16f8dw21a5u2jk0h1z7uk' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/Result' filename='terdt.csv' password='' server=''>
        <relation name='terdt.csv' table='[terdt#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=',' text-qualifier=''>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[terdt.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[terdt.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[terdt.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[terdt.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='空驶率' datatype='real' name='[Calculation_272186356899512325]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([F3])' />
      </column>
      <column caption='日' datatype='integer' name='[F1]' role='dimension' type='quantitative' />
      <column caption='时' datatype='integer' name='[F2]' role='dimension' type='quantitative' />
      <column caption='raw空驶率' datatype='real' name='[F3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.372549' measure-ordering='alphabetic' measure-percentage='0.490196' parameter-percentage='0.137255' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
        <field-sort-custom-order field='F3' />
      </field-sort-info>
    </datasource>
    <datasource caption='avgv均速' inline='true' name='textscan.05uep4i041iexe1gelwmb1kktu2k' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/1. 平均速度' filename='avgv.csv' password='' server=''>
        <relation name='avgv.csv' table='[avgv#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=',' text-qualifier='&quot;'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[avgv.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[avgv.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avgv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='频数' datatype='integer' name='[Calculation_272186356899512320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(ROUND([F2]))' />
      </column>
      <column caption='平均速度' datatype='real' name='[Calculation_272186356899512322]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND( [F2])' />
      </column>
      <column caption='avgv' datatype='real' name='[Calculation_272186356899512324]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([F2])' />
      </column>
      <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='v' datatype='real' name='[F2]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.248366' measure-ordering='alphabetic' measure-percentage='0.614379' parameter-percentage='0.137255' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
      </field-sort-info>
    </datasource>
    <datasource caption='tdb0_2w' inline='true' name='textscan.0v84pu312n6bpq151xal6181kmcp' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/D.DBSCAN聚类上下车点' filename='tdb0_2w.csv' password='' server=''>
        <relation name='tdb0_2w.csv' table='[tdb0_2w#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=','>
            <column datatype='real' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tdb0_2w.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[tdb0_2w.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tdb0_2w.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='long' datatype='real' name='[F1]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='lat' datatype='real' name='[F2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.3125' measure-ordering='alphabetic' measure-percentage='0.409091' parameter-percentage='0.278409' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
      </field-sort-info>
    </datasource>
    <datasource caption='tdb0_2w 下客' inline='true' name='textscan.118fdf80xa178p15y777g1k3zhdn' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/D.DBSCAN聚类上下车点' filename='tdb0_2w.csv' password='' server=''>
        <relation name='tdb0_2w.csv' table='[tdb0_2w#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=','>
            <column datatype='real' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tdb0_2w.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[tdb0_2w.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tdb0_2w.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='long' datatype='real' name='[F1]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='lat' datatype='real' name='[F2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[F1]' derivation='None' name='[none:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F2]' derivation='None' name='[none:F2:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[排除(lat,long)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:F2:qk]' />
          <groupfilter function='level-members' level='[none:F1:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.228261' measure-ordering='alphabetic' measure-percentage='0.543478' parameter-percentage='0.228261' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
      </field-sort-info>
    </datasource>
    <datasource caption='tdb1_2w' inline='true' name='textscan.0mvitg403hc7071a4uw4b0dpiws9' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/D.DBSCAN聚类上下车点' filename='tdb1_2w.csv' password='' server=''>
        <relation name='tdb1_2w.csv' table='[tdb1_2w#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=','>
            <column datatype='real' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tdb1_2w.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[tdb1_2w.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tdb1_2w.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='long' datatype='real' name='[F1]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='lat' datatype='real' name='[F2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[F1]' derivation='None' name='[none:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F2]' derivation='None' name='[none:F2:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[排除(lat,long)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:F2:qk]' />
          <groupfilter function='level-members' level='[none:F1:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.185841' measure-ordering='alphabetic' measure-percentage='0.628319' parameter-percentage='0.185841' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
      </field-sort-info>
    </datasource>
    <datasource caption='3 centres' inline='true' name='textscan.1hx8qdl1rl58o9164attw0whtz2l' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/3.24列500行数聚类（mahout和spark）' filename='2 centres.csv' password='' server=''>
        <relation name='3 centres.csv' table='[3 centres#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=',' text-qualifier='&quot;'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
            <column datatype='real' name='F6' ordinal='5' />
            <column datatype='real' name='F7' ordinal='6' />
            <column datatype='real' name='F8' ordinal='7' />
            <column datatype='real' name='F9' ordinal='8' />
            <column datatype='real' name='F10' ordinal='9' />
            <column datatype='real' name='F11' ordinal='10' />
            <column datatype='real' name='F12' ordinal='11' />
            <column datatype='real' name='F13' ordinal='12' />
            <column datatype='real' name='F14' ordinal='13' />
            <column datatype='real' name='F15' ordinal='14' />
            <column datatype='real' name='F16' ordinal='15' />
            <column datatype='real' name='F17' ordinal='16' />
            <column datatype='real' name='F18' ordinal='17' />
            <column datatype='real' name='F19' ordinal='18' />
            <column datatype='real' name='F20' ordinal='19' />
            <column datatype='real' name='F21' ordinal='20' />
            <column datatype='real' name='F22' ordinal='21' />
            <column datatype='real' name='F23' ordinal='22' />
            <column datatype='real' name='F24' ordinal='23' />
            <column datatype='real' name='F25' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F12</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F12]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F12</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F15]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F15</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F16]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F16</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F17]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F17</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F20]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F20</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F21</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F21]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F21</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F23</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F23]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F23</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F24</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F24]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F24</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F25]</local-name>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias>F25</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[3 centres.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='8' datatype='real' name='[F10]' role='measure' type='quantitative' />
      <column caption='9' datatype='real' name='[F11]' role='measure' type='quantitative' />
      <column caption='10' datatype='real' name='[F12]' role='measure' type='quantitative' />
      <column caption='11' datatype='real' name='[F13]' role='measure' type='quantitative' />
      <column caption='12' datatype='real' name='[F14]' role='measure' type='quantitative' />
      <column caption='13' datatype='real' name='[F15]' role='measure' type='quantitative' />
      <column caption='14' datatype='real' name='[F16]' role='measure' type='quantitative' />
      <column caption='15' datatype='real' name='[F17]' role='measure' type='quantitative' />
      <column caption='16' datatype='real' name='[F18]' role='measure' type='quantitative' />
      <column caption='17' datatype='real' name='[F19]' role='measure' type='quantitative' />
      <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='18' datatype='real' name='[F20]' role='measure' type='quantitative' />
      <column caption='19' datatype='real' name='[F21]' role='measure' type='quantitative' />
      <column caption='20' datatype='real' name='[F22]' role='measure' type='quantitative' />
      <column caption='21' datatype='real' name='[F23]' role='measure' type='quantitative' />
      <column caption='22' datatype='real' name='[F24]' role='measure' type='quantitative' />
      <column caption='23' datatype='real' name='[F25]' role='measure' type='quantitative' />
      <column caption='0' datatype='real' name='[F2]' role='measure' type='quantitative' />
      <column caption='1' datatype='real' name='[F3]' role='measure' type='quantitative' />
      <column caption='2' datatype='real' name='[F4]' role='measure' type='quantitative' />
      <column caption='3' datatype='real' name='[F5]' role='measure' type='quantitative' />
      <column caption='4' datatype='real' name='[F6]' role='measure' type='quantitative' />
      <column caption='5' datatype='real' name='[F7]' role='measure' type='quantitative' />
      <column caption='6' datatype='real' name='[F8]' role='measure' type='quantitative' />
      <column caption='7' datatype='real' name='[F9]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.174194' measure-ordering='alphabetic' measure-percentage='0.690323' parameter-percentage='0.135484' rowDisplayCount='11' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
        <field-sort-custom-order field='F3' />
        <field-sort-custom-order field='F4' />
        <field-sort-custom-order field='F5' />
        <field-sort-custom-order field='F6' />
        <field-sort-custom-order field='F7' />
        <field-sort-custom-order field='F8' />
        <field-sort-custom-order field='F9' />
        <field-sort-custom-order field='F10' />
        <field-sort-custom-order field='F11' />
        <field-sort-custom-order field='F12' />
        <field-sort-custom-order field='F13' />
        <field-sort-custom-order field='F14' />
        <field-sort-custom-order field='F15' />
        <field-sort-custom-order field='F16' />
        <field-sort-custom-order field='F17' />
        <field-sort-custom-order field='F18' />
        <field-sort-custom-order field='F19' />
        <field-sort-custom-order field='F20' />
        <field-sort-custom-order field='F21' />
        <field-sort-custom-order field='F22' />
        <field-sort-custom-order field='F23' />
        <field-sort-custom-order field='F24' />
        <field-sort-custom-order field='F25' />
      </field-sort-info>
    </datasource>
    <datasource caption='2 centres' inline='true' name='textscan.1tx51b318f0yku16z0c0g0vyurxy' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码/出租车 - Tableau.twb 个文件/Data/3.24列500行数聚类（mahout和spark）' filename='2 centres.csv' password='' server=''>
        <relation name='2 centres.csv' table='[2 centres#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='zh_CN' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
            <column datatype='real' name='F3' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
            <column datatype='real' name='F6' ordinal='5' />
            <column datatype='real' name='F7' ordinal='6' />
            <column datatype='real' name='F8' ordinal='7' />
            <column datatype='real' name='F9' ordinal='8' />
            <column datatype='real' name='F10' ordinal='9' />
            <column datatype='real' name='F11' ordinal='10' />
            <column datatype='real' name='F12' ordinal='11' />
            <column datatype='real' name='F13' ordinal='12' />
            <column datatype='real' name='F14' ordinal='13' />
            <column datatype='real' name='F15' ordinal='14' />
            <column datatype='real' name='F16' ordinal='15' />
            <column datatype='real' name='F17' ordinal='16' />
            <column datatype='real' name='F18' ordinal='17' />
            <column datatype='real' name='F19' ordinal='18' />
            <column datatype='real' name='F20' ordinal='19' />
            <column datatype='real' name='F21' ordinal='20' />
            <column datatype='real' name='F22' ordinal='21' />
            <column datatype='real' name='F23' ordinal='22' />
            <column datatype='real' name='F24' ordinal='23' />
            <column datatype='real' name='F25' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F12</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F12]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F12</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F15]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F15</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F16]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F16</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F17]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F17</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F20]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F20</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F21</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F21]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F21</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F22</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F22]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F22</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F23</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F23]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F23</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F24</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F24]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F24</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F25]</local-name>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias>F25</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2 centres.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.283186' measure-ordering='alphabetic' measure-percentage='0.530973' parameter-percentage='0.185841' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='5 centres (5 centres)' inline='true' name='excel-direct.1ypwl6z17528p4190lv1r0zc0x8d' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码\出租车 - Tableau.twb 个文件\Data\3.24列500行数聚类（mahout和spark）\5 centres.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='5 centres' table='[&apos;5 centres$&apos;]' type='table'>
          <columns gridOrigin='A1:Y6:no:A1:Y6:0' header='yes' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='0:00' ordinal='1' />
            <column datatype='real' name='1:00' ordinal='2' />
            <column datatype='real' name='2:00' ordinal='3' />
            <column datatype='real' name='3:00' ordinal='4' />
            <column datatype='real' name='4:00' ordinal='5' />
            <column datatype='real' name='5:00' ordinal='6' />
            <column datatype='real' name='6:00' ordinal='7' />
            <column datatype='real' name='7:00' ordinal='8' />
            <column datatype='real' name='8:00' ordinal='9' />
            <column datatype='real' name='9:00' ordinal='10' />
            <column datatype='real' name='10:00' ordinal='11' />
            <column datatype='real' name='11:00' ordinal='12' />
            <column datatype='real' name='12:00' ordinal='13' />
            <column datatype='real' name='13:00' ordinal='14' />
            <column datatype='real' name='14:00' ordinal='15' />
            <column datatype='real' name='15:00' ordinal='16' />
            <column datatype='real' name='16:00' ordinal='17' />
            <column datatype='real' name='17:00' ordinal='18' />
            <column datatype='real' name='18:00' ordinal='19' />
            <column datatype='real' name='19:00' ordinal='20' />
            <column datatype='real' name='20:00' ordinal='21' />
            <column datatype='real' name='21:00' ordinal='22' />
            <column datatype='real' name='22:00' ordinal='23' />
            <column datatype='real' name='23:00' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[0:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>0:00</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>1:00</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>2:00</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>3:00</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[4:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>4:00</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>5:00</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[6:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>6:00</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[7:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>7:00</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[8:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>8:00</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>9:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[9:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>9:00</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[10:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>10:00</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>11:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[11:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>11:00</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[12:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>12:00</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>13:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[13:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>13:00</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>14:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[14:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>14:00</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>15:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[15:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>15:00</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>16:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[16:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>16:00</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>17:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[17:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>17:00</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>18:00</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>19:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[19:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>19:00</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>20:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[20:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>20:00</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>21:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[21:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>21:00</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>22:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[22:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>22:00</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>23:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[23:00]</local-name>
            <parent-name>[5 centres]</parent-name>
            <remote-alias>23:00</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[5 centres]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y6:no:A1:Y6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.245161' measure-ordering='alphabetic' measure-percentage='0.619355' parameter-percentage='0.135484' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='0:00' />
        <field-sort-custom-order field='1:00' />
        <field-sort-custom-order field='2:00' />
        <field-sort-custom-order field='3:00' />
        <field-sort-custom-order field='4:00' />
        <field-sort-custom-order field='5:00' />
        <field-sort-custom-order field='6:00' />
        <field-sort-custom-order field='7:00' />
        <field-sort-custom-order field='8:00' />
        <field-sort-custom-order field='9:00' />
        <field-sort-custom-order field='10:00' />
        <field-sort-custom-order field='11:00' />
        <field-sort-custom-order field='12:00' />
        <field-sort-custom-order field='13:00' />
        <field-sort-custom-order field='14:00' />
        <field-sort-custom-order field='15:00' />
        <field-sort-custom-order field='16:00' />
        <field-sort-custom-order field='17:00' />
        <field-sort-custom-order field='18:00' />
        <field-sort-custom-order field='19:00' />
        <field-sort-custom-order field='20:00' />
        <field-sort-custom-order field='21:00' />
        <field-sort-custom-order field='22:00' />
        <field-sort-custom-order field='23:00' />
      </field-sort-info>
    </datasource>
    <datasource caption='7 centres (7 centres)' inline='true' name='excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码\出租车 - Tableau.twb 个文件\Data\3.24列500行数聚类（mahout和spark）\7 centres.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='7 centres' table='[&apos;7 centres$&apos;]' type='table'>
          <columns gridOrigin='A1:Y8:no:A1:Y8:0' header='yes' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='0:00' ordinal='1' />
            <column datatype='real' name='1:00' ordinal='2' />
            <column datatype='real' name='2:00' ordinal='3' />
            <column datatype='real' name='3:00' ordinal='4' />
            <column datatype='real' name='4:00' ordinal='5' />
            <column datatype='real' name='5:00' ordinal='6' />
            <column datatype='real' name='6:00' ordinal='7' />
            <column datatype='real' name='7:00' ordinal='8' />
            <column datatype='real' name='8:00' ordinal='9' />
            <column datatype='real' name='9:00' ordinal='10' />
            <column datatype='real' name='10:00' ordinal='11' />
            <column datatype='real' name='11:00' ordinal='12' />
            <column datatype='real' name='12:00' ordinal='13' />
            <column datatype='real' name='13:00' ordinal='14' />
            <column datatype='real' name='14:00' ordinal='15' />
            <column datatype='real' name='15:00' ordinal='16' />
            <column datatype='real' name='16:00' ordinal='17' />
            <column datatype='real' name='17:00' ordinal='18' />
            <column datatype='real' name='18:00' ordinal='19' />
            <column datatype='real' name='19:00' ordinal='20' />
            <column datatype='real' name='20:00' ordinal='21' />
            <column datatype='real' name='21:00' ordinal='22' />
            <column datatype='real' name='22:00' ordinal='23' />
            <column datatype='real' name='23:00' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[0:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>0:00</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>1:00</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>2:00</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>3:00</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[4:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>4:00</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>5:00</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[6:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>6:00</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[7:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>7:00</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[8:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>8:00</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>9:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[9:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>9:00</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[10:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>10:00</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>11:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[11:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>11:00</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[12:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>12:00</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>13:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[13:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>13:00</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>14:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[14:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>14:00</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>15:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[15:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>15:00</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>16:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[16:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>16:00</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>17:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[17:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>17:00</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>18:00</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>19:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[19:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>19:00</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>20:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[20:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>20:00</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>21:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[21:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>21:00</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>22:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[22:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>22:00</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>23:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[23:00]</local-name>
            <parent-name>[7 centres]</parent-name>
            <remote-alias>23:00</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[7 centres]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y8:no:A1:Y8:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.245161' measure-ordering='alphabetic' measure-percentage='0.619355' parameter-percentage='0.135484' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='0:00' />
        <field-sort-custom-order field='1:00' />
        <field-sort-custom-order field='2:00' />
        <field-sort-custom-order field='3:00' />
        <field-sort-custom-order field='4:00' />
        <field-sort-custom-order field='5:00' />
        <field-sort-custom-order field='6:00' />
        <field-sort-custom-order field='7:00' />
        <field-sort-custom-order field='8:00' />
        <field-sort-custom-order field='9:00' />
        <field-sort-custom-order field='10:00' />
        <field-sort-custom-order field='11:00' />
        <field-sort-custom-order field='12:00' />
        <field-sort-custom-order field='13:00' />
        <field-sort-custom-order field='14:00' />
        <field-sort-custom-order field='15:00' />
        <field-sort-custom-order field='16:00' />
        <field-sort-custom-order field='17:00' />
        <field-sort-custom-order field='18:00' />
        <field-sort-custom-order field='19:00' />
        <field-sort-custom-order field='20:00' />
        <field-sort-custom-order field='21:00' />
        <field-sort-custom-order field='22:00' />
        <field-sort-custom-order field='23:00' />
      </field-sort-info>
    </datasource>
    <datasource caption='8105tx24' inline='true' name='textscan.08bretg0xjsc3d1cmkyhr1lqut3w' version='9.3'>
      <connection class='textscan' directory='F:/Study/CS &amp; DataScience/share/Final/I.FINAL-taxi/3.24列500行数聚类（mahout和spark）' filename='8105tx24.csv' password='' server=''>
        <relation name='8105tx24.csv' table='[8105tx24#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='integer' name='date' ordinal='1' />
            <column datatype='real' name='0:00' ordinal='2' />
            <column datatype='real' name='1:00' ordinal='3' />
            <column datatype='real' name='2:00' ordinal='4' />
            <column datatype='real' name='3:00' ordinal='5' />
            <column datatype='real' name='4:00' ordinal='6' />
            <column datatype='real' name='5:00' ordinal='7' />
            <column datatype='real' name='6:00' ordinal='8' />
            <column datatype='real' name='7:00' ordinal='9' />
            <column datatype='real' name='8:00' ordinal='10' />
            <column datatype='real' name='9:00' ordinal='11' />
            <column datatype='real' name='10:00' ordinal='12' />
            <column datatype='real' name='11:00' ordinal='13' />
            <column datatype='real' name='12:00' ordinal='14' />
            <column datatype='real' name='13:00' ordinal='15' />
            <column datatype='real' name='14:00' ordinal='16' />
            <column datatype='real' name='15:00' ordinal='17' />
            <column datatype='real' name='16:00' ordinal='18' />
            <column datatype='real' name='17:00' ordinal='19' />
            <column datatype='real' name='18:00' ordinal='20' />
            <column datatype='real' name='19:00' ordinal='21' />
            <column datatype='real' name='20:00' ordinal='22' />
            <column datatype='real' name='21:00' ordinal='23' />
            <column datatype='real' name='22:00' ordinal='24' />
            <column datatype='real' name='23:00' ordinal='25' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[0:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>0:00</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>1:00</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>2:00</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>3:00</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[4:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>4:00</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>5:00</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[6:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>6:00</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[7:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>7:00</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[8:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>8:00</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>9:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[9:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>9:00</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[10:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>10:00</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>11:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[11:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>11:00</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[12:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>12:00</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>13:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[13:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>13:00</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>14:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[14:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>14:00</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>15:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[15:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>15:00</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>16:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[16:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>16:00</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>17:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[17:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>17:00</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>18:00</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>19:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[19:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>19:00</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>20:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[20:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>20:00</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>21:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[21:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>21:00</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>22:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[22:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>22:00</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>23:00</remote-name>
            <remote-type>5</remote-type>
            <local-name>[23:00]</local-name>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias>23:00</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[8105tx24.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.233333' measure-ordering='alphabetic' measure-percentage='0.533333' parameter-percentage='0.233333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='db0_centroids5 (db0_centroids5)' inline='true' name='excel-direct.1evssiv1i1mj34188wwd21tz7eo0' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\D.DBSCAN聚类上下车点\db0_centroids5.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='db0_centroids5' table='[db0_centroids5$]' type='table'>
          <columns gridOrigin='A1:D6:no:A1:D6:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='lon' ordinal='1' />
            <column datatype='real' name='lat' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[db0_centroids5]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[db0_centroids5]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[db0_centroids5]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[db0_centroids5]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[db0_centroids5]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D6:no:A1:D6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.265487' measure-ordering='alphabetic' measure-percentage='0.548673' parameter-percentage='0.185841' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='db1_centroids12 (db1_centroids12) (2)' inline='true' name='excel-direct.0jykr2r1niih9a13vyvec1145els' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\D.DBSCAN聚类上下车点\db1_centroids12.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='db1_centroids12' table='[db1_centroids12$]' type='table'>
          <columns gridOrigin='A1:J13:no:A1:J13:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='lon' ordinal='1' />
            <column datatype='real' name='lat' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
            <column datatype='real' name='F6' ordinal='5' />
            <column datatype='real' name='F7' ordinal='6' />
            <column datatype='real' name='F8' ordinal='7' />
            <column datatype='real' name='F9' ordinal='8' />
            <column datatype='string' name='F10' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[db1_centroids12]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J13:no:A1:J13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' hidden='true' name='[F10]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F5]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F6]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F7]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F8]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F9]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.326087' measure-ordering='alphabetic' measure-percentage='0.445652' parameter-percentage='0.228261' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='db1_centroids5 (db1_centroids5)' inline='true' name='excel-direct.0iwu1t31a95ujd18r6yw20m67k3x' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\D.DBSCAN聚类上下车点\db1_centroids5.xlsx' interpretationMode='0' password='' server='' validate='no'>
        <relation name='db1_centroids5' table='[db1_centroids5$]' type='table'>
          <columns gridOrigin='A1:F6:no:A1:F6:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='lon' ordinal='1' />
            <column datatype='real' name='lat' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='real' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[db1_centroids5]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[db1_centroids5]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[db1_centroids5]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[db1_centroids5]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[db1_centroids5]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[db1_centroids5]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[db1_centroids5]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F6:no:A1:F6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F5]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[F6]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.402174' measure-ordering='alphabetic' measure-percentage='0.369565' parameter-percentage='0.228261' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='物流订单 (物流订单数据)' inline='true' name='excel-direct.0a4vzta1w77fcg12yer5y1yr7lww' version='9.3'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:\Study\CS &amp; DataScience\share\Final\I.FINAL-taxi\梁毅 - 深圳出租车大数据分析项目展示视频&amp;代码\出租车 - Tableau.twb 个文件\Data\样例数据\物流订单数据.xls' interpretationMode='0' password='' server='' validate='no'>
        <relation name='物流订单' table='[物流订单$]' type='table'>
          <columns gridOrigin='A1:I8038:no:A1:I8038:0' header='yes' outcome='2'>
            <column datatype='string' name='顾客姓名' ordinal='0' />
            <column datatype='string' name='订单日期' ordinal='1' />
            <column datatype='integer' name='订单号' ordinal='2' />
            <column datatype='string' name='订单等级' ordinal='3' />
            <column datatype='string' name='产品类别' ordinal='4' />
            <column datatype='string' name='区域' ordinal='5' />
            <column datatype='string' name='运送日期' ordinal='6' />
            <column datatype='string' name='运输方式' ordinal='7' />
            <column datatype='real' name='运输费用' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>顾客姓名</remote-name>
            <remote-type>130</remote-type>
            <local-name>[顾客姓名]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>顾客姓名</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单日期</remote-name>
            <remote-type>130</remote-type>
            <local-name>[订单日期]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>订单日期</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单号</remote-name>
            <remote-type>20</remote-type>
            <local-name>[订单号]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>订单号</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>订单等级</remote-name>
            <remote-type>130</remote-type>
            <local-name>[订单等级]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>订单等级</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>产品类别</remote-name>
            <remote-type>130</remote-type>
            <local-name>[产品类别]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>产品类别</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>区域</remote-name>
            <remote-type>130</remote-type>
            <local-name>[区域]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>区域</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>运送日期</remote-name>
            <remote-type>130</remote-type>
            <local-name>[运送日期]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>运送日期</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>运输方式</remote-name>
            <remote-type>130</remote-type>
            <local-name>[运输方式]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>运输方式</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>运输费用</remote-name>
            <remote-type>5</remote-type>
            <local-name>[运输费用]</local-name>
            <parent-name>[物流订单]</parent-name>
            <remote-alias>运输费用</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[物流订单]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I8038:no:A1:I8038:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='聚类' datatype='integer' name='[Calculation_447263787859869699]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_INT( &apos;&#13;&#10;  set.seed(1);&#13;&#10;  result &lt;- kmeans(data.frame(.arg1, .arg2), &apos; &#13;&#10;    + str(4) &#13;&#10;    + &apos;); &#13;&#10;  result$cluster&apos;, &#13;&#10;sum([运输费用]),&#13;&#10;SUM([excel-direct.1raade20tond451ds45fp0560lyc].[销售额])&#13;&#10;)'>
          <table-calc ordering-field='[excel-direct.0a4vzta1w77fcg12yer5y1yr7lww].[顾客姓名]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[产品类别]' role='dimension' type='nominal' />
      <column datatype='string' name='[区域]' role='dimension' type='nominal' />
      <column datatype='string' name='[顾客姓名]' role='dimension' type='nominal' />
      <column-instance column='[产品类别]' derivation='None' name='[none:产品类别:nk]' pivot='key' type='nominal' />
      <group caption='操作(区域)' hidden='true' name='[Action (区域)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[区域]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.522581' measure-ordering='alphabetic' measure-percentage='0.341935' parameter-percentage='0.135484' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:产品类别:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;办公用品&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;家具产品&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;技术产品&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='excel-direct.1raade20tond451ds45fp0560lyc'>
        <column datatype='real' name='[销售额]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.0a4vzta1w77fcg12yer5y1yr7lww'>
      <column-instance column='[区域]' derivation='None' name='[none:区域:nk]' pivot='key' type='nominal' />
      <column-instance column='[订单日期]' derivation='None' name='[none:订单日期:nk]' pivot='key' type='nominal' />
      <column-instance column='[订单等级]' derivation='None' name='[none:订单等级:nk]' pivot='key' type='nominal' />
      <column-instance column='[运输方式]' derivation='None' name='[none:运输方式:nk]' pivot='key' type='nominal' />
      <column-instance column='[运送日期]' derivation='None' name='[none:运送日期:nk]' pivot='key' type='nominal' />
      <column-instance column='[顾客姓名]' derivation='None' name='[none:顾客姓名:nk]' pivot='key' type='nominal' />
      <column datatype='string' name='[区域]' role='dimension' type='nominal' />
      <column datatype='string' name='[订单日期]' role='dimension' type='nominal' />
      <column datatype='string' name='[订单等级]' role='dimension' type='nominal' />
      <column datatype='string' name='[运输方式]' role='dimension' type='nominal' />
      <column datatype='string' name='[运送日期]' role='dimension' type='nominal' />
      <column datatype='string' name='[顾客姓名]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.1raade20tond451ds45fp0560lyc'>
      <column-instance column='[区域]' derivation='None' name='[none:区域:nk]' pivot='key' type='nominal' />
      <column-instance column='[订单等级]' derivation='None' name='[none:订单等级:nk]' pivot='key' type='nominal' />
      <column-instance column='[运输方式]' derivation='None' name='[none:运输方式:nk]' pivot='key' type='nominal' />
      <column-instance column='[顾客姓名]' derivation='None' name='[none:顾客姓名:nk]' pivot='key' type='nominal' />
      <column-instance column='[订单日期]' derivation='Year' name='[yr:订单日期:ok]' pivot='key' type='ordinal' />
      <column-instance column='[运送日期]' derivation='Year' name='[yr:运送日期:ok]' pivot='key' type='ordinal' />
      <column datatype='string' name='[区域]' role='dimension' type='nominal' />
      <column datatype='date' name='[订单日期]' role='dimension' type='ordinal' />
      <column datatype='string' name='[订单等级]' role='dimension' type='nominal' />
      <column datatype='string' name='[运输方式]' role='dimension' type='nominal' />
      <column datatype='date' name='[运送日期]' role='dimension' type='ordinal' />
      <column datatype='string' name='[顾客姓名]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.0a4vzta1w77fcg12yer5y1yr7lww' target='excel-direct.1raade20tond451ds45fp0560lyc'>
      <column-mapping>
        <map key='[excel-direct.0a4vzta1w77fcg12yer5y1yr7lww].[none:区域:nk]' value='[excel-direct.1raade20tond451ds45fp0560lyc].[none:区域:nk]' />
        <map key='[excel-direct.0a4vzta1w77fcg12yer5y1yr7lww].[none:订单日期:nk]' value='[excel-direct.1raade20tond451ds45fp0560lyc].[yr:订单日期:ok]' />
        <map key='[excel-direct.0a4vzta1w77fcg12yer5y1yr7lww].[none:订单等级:nk]' value='[excel-direct.1raade20tond451ds45fp0560lyc].[none:订单等级:nk]' />
        <map key='[excel-direct.0a4vzta1w77fcg12yer5y1yr7lww].[none:运输方式:nk]' value='[excel-direct.1raade20tond451ds45fp0560lyc].[none:运输方式:nk]' />
        <map key='[excel-direct.0a4vzta1w77fcg12yer5y1yr7lww].[none:运送日期:nk]' value='[excel-direct.1raade20tond451ds45fp0560lyc].[yr:运送日期:ok]' />
        <map key='[excel-direct.0a4vzta1w77fcg12yer5y1yr7lww].[none:顾客姓名:nk]' value='[excel-direct.1raade20tond451ds45fp0560lyc].[none:顾客姓名:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource inline='true' name='AutoNavi' source-platform='win' version='9.3'>
      <connection class='OpenStreetMap' max-stretch='1.0' min-shrink='1.0' offline='' port='80' server='http://webrd01.is.autonavi.com' tileset='US\normal' url-format='/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x={X}&amp;y={Y}&amp;z={Z}' />
      <languages />
      <layers>
        <layer display-name='AutoNavi' name='AutoNavi' show-ui='false' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='AutoNavi' name='AutoNavi' wait-tile-color='#dddddd'>
          <map-layer-style name='AutoNavi' request-string='AutoNavi' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='9.3'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='AutoNavi' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© OpenStreetMap 供稿者' copyright-url='http://www.openstreetmap.org/copyright' short-copyright-string='' />
    </mapsource>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='DBSCAN聚类上车点12'>
      <table>
        <view>
          <datasources>
            <datasource caption='db1_centroids12 (db1_centroids12) (2)' name='excel-direct.0jykr2r1niih9a13vyvec1145els' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0jykr2r1niih9a13vyvec1145els'>
            <column datatype='string' name='[F4]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[F4]' derivation='None' name='[none:F4:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0jykr2r1niih9a13vyvec1145els].[none:lon:qk]' field-type='quantitative' max='12702917.536622394' min='12694960.039677758' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0jykr2r1niih9a13vyvec1145els].[none:lat:qk]' field-type='quantitative' max='2578342.4406631039' min='2574070.0130821113' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.0jykr2r1niih9a13vyvec1145els].[none:F4:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='2.5082871913909912' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#0055ff' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#ffff00' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0jykr2r1niih9a13vyvec1145els].[none:lat:qk]</rows>
        <cols>[excel-direct.0jykr2r1niih9a13vyvec1145els].[none:lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DBSCAN聚类上车点5'>
      <table>
        <view>
          <datasources>
            <datasource caption='db1_centroids5 (db1_centroids5)' name='excel-direct.0iwu1t31a95ujd18r6yw20m67k3x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0iwu1t31a95ujd18r6yw20m67k3x'>
            <column datatype='string' name='[F4]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[F4]' derivation='None' name='[none:F4:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0iwu1t31a95ujd18r6yw20m67k3x].[none:lon:qk]' field-type='quantitative' max='12704495.813646581' min='12666711.783664772' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0iwu1t31a95ujd18r6yw20m67k3x].[none:lat:qk]' field-type='quantitative' max='2592471.5819296674' min='2572195.6544266525' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.0iwu1t31a95ujd18r6yw20m67k3x].[none:F4:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0iwu1t31a95ujd18r6yw20m67k3x].[none:lat:qk]</rows>
        <cols>[excel-direct.0iwu1t31a95ujd18r6yw20m67k3x].[none:lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DBSCAN聚类下车点'>
      <table>
        <view>
          <datasources>
            <datasource caption='db0_centroids5 (db0_centroids5)' name='excel-direct.1evssiv1i1mj34188wwd21tz7eo0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1evssiv1i1mj34188wwd21tz7eo0'>
            <column datatype='string' name='[F4]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[F4]' derivation='None' name='[none:F4:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1evssiv1i1mj34188wwd21tz7eo0].[none:lon:qk]' field-type='quantitative' max='12708519.554888679' min='12663612.800771136' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1evssiv1i1mj34188wwd21tz7eo0].[none:lat:qk]' field-type='quantitative' max='2594597.8191683381' min='2570481.9367443654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[excel-direct.1evssiv1i1mj34188wwd21tz7eo0].[none:F4:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#0055ff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1evssiv1i1mj34188wwd21tz7eo0].[none:lat:qk]</rows>
        <cols>[excel-direct.1evssiv1i1mj34188wwd21tz7eo0].[none:lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='上客点分布'>
      <table>
        <view>
          <datasources>
            <datasource caption='tdb1_2w' name='textscan.0mvitg403hc7071a4uw4b0dpiws9' />
          </datasources>
          <mapsources>
            <mapsource name='AutoNavi' />
          </mapsources>
          <datasource-dependencies datasource='textscan.0mvitg403hc7071a4uw4b0dpiws9'>
            <column aggregation='Avg' caption='long' datatype='real' name='[F1]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='lat' datatype='real' name='[F2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='AutoNavi' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#cc721e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0mvitg403hc7071a4uw4b0dpiws9].[none:F2:qk]</rows>
        <cols>[textscan.0mvitg403hc7071a4uw4b0dpiws9].[none:F1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='下客点分布'>
      <table>
        <view>
          <datasources>
            <datasource caption='tdb0_2w 下客' name='textscan.118fdf80xa178p15y777g1k3zhdn' />
          </datasources>
          <mapsources>
            <mapsource name='AutoNavi' />
          </mapsources>
          <datasource-dependencies datasource='textscan.118fdf80xa178p15y777g1k3zhdn'>
            <column aggregation='Avg' caption='long' datatype='real' name='[F1]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='lat' datatype='real' name='[F2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.118fdf80xa178p15y777g1k3zhdn].[排除(lat,long)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:F2:qk]' />
                <groupfilter function='level-members' level='[none:F1:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F1:qk]' member='114.00812999999999' />
                    <groupfilter function='member' level='[none:F2:qk]' member='22.509416999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F1:qk]' member='114.07073' />
                    <groupfilter function='member' level='[none:F2:qk]' member='22.503733' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F1:qk]' member='114.0949' />
                    <groupfilter function='member' level='[none:F2:qk]' member='22.508682' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F1:qk]' member='114.11153400000001' />
                    <groupfilter function='member' level='[none:F2:qk]' member='22.515599999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F1:qk]' member='114.18944999999999' />
                    <groupfilter function='member' level='[none:F2:qk]' member='22.473534000000001' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:F2:qk]' />
                  <hierarchy name='[none:F1:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.118fdf80xa178p15y777g1k3zhdn].[排除(lat,long)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.118fdf80xa178p15y777g1k3zhdn].[none:F1:qk]' field-type='quantitative' max='12767892.988262195' min='12616700.546314117' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.118fdf80xa178p15y777g1k3zhdn].[none:F2:qk]' field-type='quantitative' max='2627139.8592155417' min='2545963.7351766843' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='AutoNavi' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.118fdf80xa178p15y777g1k3zhdn].[none:F2:qk]</rows>
        <cols>[textscan.118fdf80xa178p15y777g1k3zhdn].[none:F1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='估计出整条路上汽车的平均速度'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='出租车画像3'>
      <table>
        <view>
          <datasources>
            <datasource caption='3 centres' name='textscan.1hx8qdl1rl58o9164attw0whtz2l' />
          </datasources>
          <datasource-dependencies datasource='textscan.1hx8qdl1rl58o9164attw0whtz2l'>
            <column caption='8' datatype='real' name='[F10]' role='measure' type='quantitative' />
            <column caption='9' datatype='real' name='[F11]' role='measure' type='quantitative' />
            <column caption='10' datatype='real' name='[F12]' role='measure' type='quantitative' />
            <column caption='11' datatype='real' name='[F13]' role='measure' type='quantitative' />
            <column caption='12' datatype='real' name='[F14]' role='measure' type='quantitative' />
            <column caption='13' datatype='real' name='[F15]' role='measure' type='quantitative' />
            <column caption='14' datatype='real' name='[F16]' role='measure' type='quantitative' />
            <column caption='15' datatype='real' name='[F17]' role='measure' type='quantitative' />
            <column caption='16' datatype='real' name='[F18]' role='measure' type='quantitative' />
            <column caption='17' datatype='real' name='[F19]' role='measure' type='quantitative' />
            <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='18' datatype='real' name='[F20]' role='measure' type='quantitative' />
            <column caption='19' datatype='real' name='[F21]' role='measure' type='quantitative' />
            <column caption='20' datatype='real' name='[F22]' role='measure' type='quantitative' />
            <column caption='21' datatype='real' name='[F23]' role='measure' type='quantitative' />
            <column caption='22' datatype='real' name='[F24]' role='measure' type='quantitative' />
            <column caption='23' datatype='real' name='[F25]' role='measure' type='quantitative' />
            <column caption='0' datatype='real' name='[F2]' role='measure' type='quantitative' />
            <column caption='1' datatype='real' name='[F3]' role='measure' type='quantitative' />
            <column caption='2' datatype='real' name='[F4]' role='measure' type='quantitative' />
            <column caption='3' datatype='real' name='[F5]' role='measure' type='quantitative' />
            <column caption='4' datatype='real' name='[F6]' role='measure' type='quantitative' />
            <column caption='5' datatype='real' name='[F7]' role='measure' type='quantitative' />
            <column caption='6' datatype='real' name='[F8]' role='measure' type='quantitative' />
            <column caption='7' datatype='real' name='[F9]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F10]' derivation='Sum' name='[sum:F10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F11]' derivation='Sum' name='[sum:F11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F12]' derivation='Sum' name='[sum:F12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F13]' derivation='Sum' name='[sum:F13:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F14]' derivation='Sum' name='[sum:F14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F15]' derivation='Sum' name='[sum:F15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F16]' derivation='Sum' name='[sum:F16:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F17]' derivation='Sum' name='[sum:F17:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F18]' derivation='Sum' name='[sum:F18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F19]' derivation='Sum' name='[sum:F19:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F20]' derivation='Sum' name='[sum:F20:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F21]' derivation='Sum' name='[sum:F21:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F22]' derivation='Sum' name='[sum:F22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F23]' derivation='Sum' name='[sum:F23:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F24]' derivation='Sum' name='[sum:F24:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F25]' derivation='Sum' name='[sum:F25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F3]' derivation='Sum' name='[sum:F3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F4]' derivation='Sum' name='[sum:F4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F5]' derivation='Sum' name='[sum:F5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F6]' derivation='Sum' name='[sum:F6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F7]' derivation='Sum' name='[sum:F7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F8]' derivation='Sum' name='[sum:F8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F9]' derivation='Sum' name='[sum:F9:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F11:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F12:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F13:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F16:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F17:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F18:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F19:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F20:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F21:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F22:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F23:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F24:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F25:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F2:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F3:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F4:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F5:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F6:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F7:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F8:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F9:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F10:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F11:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F12:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F13:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F14:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F15:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F16:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F17:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F18:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F19:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F20:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F21:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F22:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F23:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F24:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F25:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:F1:nk]' />
              <groupfilter function='member' level='[none:F1:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]' direction='ASC' using='[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F6:qk]' />
          <slices>
            <column>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</column>
            <column>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk] * [textscan.1hx8qdl1rl58o9164attw0whtz2l].[Multiple Values])</rows>
        <cols>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>白班车: </run>
              <run bold='true'>01 （全天速度较快）</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;总计(4:00)&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</field>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</field>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</field>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;bb&quot;</value>
                    <value>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F6:qk]&quot;</value>
                    <value>3.8900540800000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='154' y='-25' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>白班车: </run>
              <run bold='true'>02 （全天速度较慢）</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;总计(4:00)&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</field>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</field>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</field>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;cc&quot;</value>
                    <value>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F6:qk]&quot;</value>
                    <value>5.1430187800000002</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='164' y='-8' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>24小时行驶: </run>
              <run bold='true'>00 （全天速度较快）</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;总计(4:00)&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</field>
                        <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</field>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</field>
                      <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;aa&quot;</value>
                    <value>&quot;[textscan.1hx8qdl1rl58o9164attw0whtz2l].[sum:F6:qk]&quot;</value>
                    <value>19.206593179999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='138' y='62' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='出租车画像5'>
      <table>
        <view>
          <datasources>
            <datasource caption='5 centres (5 centres)' name='excel-direct.1ypwl6z17528p4190lv1r0zc0x8d' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1ypwl6z17528p4190lv1r0zc0x8d'>
            <column datatype='real' name='[0:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[10:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[11:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[12:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[13:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[14:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[15:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[16:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[17:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[18:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[19:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[1:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[20:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[21:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[22:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[23:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[2:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[3:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[4:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[5:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[6:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[7:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[8:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[9:00]' role='measure' type='quantitative' />
            <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[0:00]' derivation='Sum' name='[sum:0:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10:00]' derivation='Sum' name='[sum:10:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11:00]' derivation='Sum' name='[sum:11:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12:00]' derivation='Sum' name='[sum:12:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13:00]' derivation='Sum' name='[sum:13:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14:00]' derivation='Sum' name='[sum:14:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[15:00]' derivation='Sum' name='[sum:15:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[16:00]' derivation='Sum' name='[sum:16:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[17:00]' derivation='Sum' name='[sum:17:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[18:00]' derivation='Sum' name='[sum:18:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[19:00]' derivation='Sum' name='[sum:19:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1:00]' derivation='Sum' name='[sum:1:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[20:00]' derivation='Sum' name='[sum:20:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[21:00]' derivation='Sum' name='[sum:21:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22:00]' derivation='Sum' name='[sum:22:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23:00]' derivation='Sum' name='[sum:23:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2:00]' derivation='Sum' name='[sum:2:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3:00]' derivation='Sum' name='[sum:3:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4:00]' derivation='Sum' name='[sum:4:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5:00]' derivation='Sum' name='[sum:5:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6:00]' derivation='Sum' name='[sum:6:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7:00]' derivation='Sum' name='[sum:7:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8:00]' derivation='Sum' name='[sum:8:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9:00]' derivation='Sum' name='[sum:9:00:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:0:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:1:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:2:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:3:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:5:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:6:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:7:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:8:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:9:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:10:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:11:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:12:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:13:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:14:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:15:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:16:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:17:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:18:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:19:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:20:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:21:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:22:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:23:00:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:0:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:1:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:2:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:3:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:5:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:6:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:7:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:8:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:9:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:10:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:11:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:12:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:13:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:14:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:15:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:16:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:17:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:18:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:19:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:20:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:21:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:22:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:23:00:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]' direction='ASC' using='[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]' />
          <slices>
            <column>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk] * [excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values])</rows>
        <cols>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>白班车: </run>
              <run bold='true'>01 (全天速度较快)</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;cc&quot;</value>
                    <value>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&quot;</value>
                    <value>3.8522230999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='171' y='-13' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>白班车: </run>
              <run bold='true'>02 (全天速度较快)</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ee&quot;</value>
                    <value>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&quot;</value>
                    <value>5.2727984799999996</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='140' y='-10' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>白班车: </run>
              <run bold='true'>03 （全天速度较慢）</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;bb&quot;</value>
                    <value>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&quot;</value>
                    <value>5.39103434</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='151' y='-57' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>白班车: </run>
              <run bold='true'>04 （全天速度较快）</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;aa&quot;</value>
                    <value>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&quot;</value>
                    <value>8.0830072000000008</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='161' y='-4' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>24小时行驶: </run>
              <run bold='true'>00 （全天速度较慢）</run>
              <run fontcolor='#787878'>&#10;凌晨4:00车速: </run>
              <run bold='true'>&lt;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                        <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[:Measure Names]</field>
                      <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;dd&quot;</value>
                    <value>&quot;[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[sum:4:00:qk]&quot;</value>
                    <value>24.578964710000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='168' y='38' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='出租车画像7'>
      <table>
        <view>
          <datasources>
            <datasource caption='7 centres (7 centres)' name='excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0'>
            <column datatype='real' name='[0:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[10:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[11:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[12:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[13:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[14:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[15:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[16:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[17:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[18:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[19:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[1:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[20:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[21:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[22:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[23:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[2:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[3:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[4:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[5:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[6:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[7:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[8:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[9:00]' role='measure' type='quantitative' />
            <column caption='name' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[0:00]' derivation='Sum' name='[sum:0:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10:00]' derivation='Sum' name='[sum:10:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11:00]' derivation='Sum' name='[sum:11:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12:00]' derivation='Sum' name='[sum:12:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13:00]' derivation='Sum' name='[sum:13:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14:00]' derivation='Sum' name='[sum:14:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[15:00]' derivation='Sum' name='[sum:15:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[16:00]' derivation='Sum' name='[sum:16:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[17:00]' derivation='Sum' name='[sum:17:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[18:00]' derivation='Sum' name='[sum:18:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[19:00]' derivation='Sum' name='[sum:19:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1:00]' derivation='Sum' name='[sum:1:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[20:00]' derivation='Sum' name='[sum:20:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[21:00]' derivation='Sum' name='[sum:21:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22:00]' derivation='Sum' name='[sum:22:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23:00]' derivation='Sum' name='[sum:23:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2:00]' derivation='Sum' name='[sum:2:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3:00]' derivation='Sum' name='[sum:3:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4:00]' derivation='Sum' name='[sum:4:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5:00]' derivation='Sum' name='[sum:5:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6:00]' derivation='Sum' name='[sum:6:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7:00]' derivation='Sum' name='[sum:7:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8:00]' derivation='Sum' name='[sum:8:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9:00]' derivation='Sum' name='[sum:9:00:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:0:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:1:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:2:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:3:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:4:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:5:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:6:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:7:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:8:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:9:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:10:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:11:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:12:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:13:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:14:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:15:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:16:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:17:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:18:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:19:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:20:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:21:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:22:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:23:00:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:0:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:1:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:2:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:3:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:4:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:5:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:6:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:7:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:8:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:9:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:10:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:11:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:12:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:13:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:14:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:15:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:16:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:17:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:18:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:19:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:20:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:21:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:22:00:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[sum:23:00:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[none:F1:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[Multiple Values]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[none:F1:nk] * [excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[Multiple Values])</rows>
        <cols>[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='坐标-空驶'>
      <table>
        <view>
          <datasources>
            <datasource caption='terpos' name='textscan.1i3s1it1nwpqtp19hldx80iklb4l' />
          </datasources>
          <mapsources>
            <mapsource name='AutoNavi' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1i3s1it1nwpqtp19hldx80iklb4l'>
            <column caption='hh' datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='long' datatype='real' name='[F2]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='lat' datatype='real' name='[F3]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='%' datatype='real' name='[F4]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F3]' derivation='None' name='[none:F3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F4]' derivation='None' name='[none:F4:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F1:qk]' included-values='in-range'>
            <min>6</min>
            <max>6</max>
          </filter>
          <filter class='quantitative' column='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F2:qk]' included-values='in-range'>
            <min>113.764899</min>
            <max>114.6239783</max>
          </filter>
          <filter class='quantitative' column='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F3:qk]' included-values='in-range'>
            <min>22.4424043</min>
            <max>22.848915999999999</max>
          </filter>
          <filter class='categorical' column='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[排除(%,lat,long)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:F4:qk]' />
                <groupfilter function='level-members' level='[none:F3:qk]' />
                <groupfilter function='level-members' level='[none:F2:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='113.833984' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.563839000000002' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.99285995999999999' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='113.85142500000001' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.516064' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.37658274000000003' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='113.98569999999999' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.503648999999999' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.92694169999999998' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.06012' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.489198999999999' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.73654425000000001' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.07137' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.475504000000001' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.51464325' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.07268999999999' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.493230000000001' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.23807155999999999' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.13656' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.484444' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.68599105000000005' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.156235' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.527377999999999' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.30951884000000002' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.2037' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.484106000000001' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.86926530000000002' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.21926999999999' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.474207' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.047680399999999998' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.36913' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.593800000000002' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.066016494999999994' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.37193000000001' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.595963999999999' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.85905063000000004' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:F2:qk]' member='114.61382' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:F3:qk]' member='22.54589' />
                      <groupfilter function='member' level='[none:F4:qk]' member='0.98937790000000003' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:F4:qk]' />
                  <hierarchy name='[none:F3:qk]' />
                  <hierarchy name='[none:F2:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F3:qk]</column>
            <column>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F2:qk]</column>
            <column>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[排除(%,lat,long)]</column>
            <column>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F1:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F2:qk]' field-type='quantitative' max='12731418.24053888' min='12655822.019564841' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F3:qk]' field-type='quantitative' max='2608548.7785384716' min='2567960.7165190433' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F4:qk]' palette='tableau-orange-white-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='AutoNavi' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F4:qk]' />
              <size column='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F4:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F3:qk]</rows>
        <cols>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F2:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='天-空驶率'>
      <table>
        <view>
          <datasources>
            <datasource caption='terdt' name='textscan.02k4asg16f8dw21a5u2jk0h1z7uk' />
          </datasources>
          <datasource-dependencies datasource='textscan.02k4asg16f8dw21a5u2jk0h1z7uk'>
            <column caption='日' datatype='integer' name='[F1]' role='dimension' type='quantitative' />
            <column caption='raw空驶率' datatype='real' name='[F3]' role='measure' type='quantitative' />
            <column-instance column='[F3]' derivation='Avg' name='[avg:F3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F1:qk]' field-type='quantitative' max='27' min='17' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]' field-type='quantitative' max='0.69999999999999996' min='0.40000000000000002' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='14'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]</rows>
        <cols>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F1:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>2011年4月23日  周六&#10;平均值 raw空驶率: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F1:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]</field>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F1:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.59481455875000011</value>
                    <value>23</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-12' y='-53' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>2011年4月24日  周日&#10;平均值 raw空驶率: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F1:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[avg:F3:qk]</field>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F1:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.58658656541666676</value>
                    <value>24</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='2' y='57' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='总体24小时平均'>
      <table>
        <view>
          <datasources>
            <datasource caption='8105tx24' name='textscan.08bretg0xjsc3d1cmkyhr1lqut3w' />
          </datasources>
          <datasource-dependencies datasource='textscan.08bretg0xjsc3d1cmkyhr1lqut3w'>
            <column datatype='real' name='[0:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[10:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[11:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[12:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[13:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[14:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[15:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[16:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[17:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[18:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[19:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[1:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[20:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[21:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[22:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[23:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[2:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[3:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[4:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[5:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[6:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[7:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[8:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[9:00]' role='measure' type='quantitative' />
            <column-instance column='[0:00]' derivation='Avg' name='[avg:0:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10:00]' derivation='Avg' name='[avg:10:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11:00]' derivation='Avg' name='[avg:11:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12:00]' derivation='Avg' name='[avg:12:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13:00]' derivation='Avg' name='[avg:13:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14:00]' derivation='Avg' name='[avg:14:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[15:00]' derivation='Avg' name='[avg:15:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[16:00]' derivation='Avg' name='[avg:16:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[17:00]' derivation='Avg' name='[avg:17:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[18:00]' derivation='Avg' name='[avg:18:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[19:00]' derivation='Avg' name='[avg:19:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1:00]' derivation='Avg' name='[avg:1:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[20:00]' derivation='Avg' name='[avg:20:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[21:00]' derivation='Avg' name='[avg:21:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22:00]' derivation='Avg' name='[avg:22:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23:00]' derivation='Avg' name='[avg:23:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2:00]' derivation='Avg' name='[avg:2:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3:00]' derivation='Avg' name='[avg:3:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4:00]' derivation='Avg' name='[avg:4:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5:00]' derivation='Avg' name='[avg:5:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6:00]' derivation='Avg' name='[avg:6:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7:00]' derivation='Avg' name='[avg:7:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8:00]' derivation='Avg' name='[avg:8:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9:00]' derivation='Avg' name='[avg:9:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[0:00]' derivation='Sum' name='[sum:0:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10:00]' derivation='Sum' name='[sum:10:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11:00]' derivation='Sum' name='[sum:11:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12:00]' derivation='Sum' name='[sum:12:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13:00]' derivation='Sum' name='[sum:13:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14:00]' derivation='Sum' name='[sum:14:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[15:00]' derivation='Sum' name='[sum:15:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[16:00]' derivation='Sum' name='[sum:16:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[17:00]' derivation='Sum' name='[sum:17:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[18:00]' derivation='Sum' name='[sum:18:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[19:00]' derivation='Sum' name='[sum:19:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1:00]' derivation='Sum' name='[sum:1:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[20:00]' derivation='Sum' name='[sum:20:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[21:00]' derivation='Sum' name='[sum:21:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22:00]' derivation='Sum' name='[sum:22:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23:00]' derivation='Sum' name='[sum:23:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2:00]' derivation='Sum' name='[sum:2:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3:00]' derivation='Sum' name='[sum:3:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4:00]' derivation='Sum' name='[sum:4:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5:00]' derivation='Sum' name='[sum:5:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6:00]' derivation='Sum' name='[sum:6:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7:00]' derivation='Sum' name='[sum:7:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8:00]' derivation='Sum' name='[sum:8:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9:00]' derivation='Sum' name='[sum:9:00:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:0:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:1:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:2:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:3:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:4:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:5:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:6:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:7:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:8:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:9:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:10:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:11:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:12:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:13:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:14:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:15:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:16:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:17:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:18:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:19:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:20:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:21:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:22:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[avg:23:00:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:0:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:1:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:2:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:3:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:4:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:5:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:6:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:7:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:8:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:9:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:10:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:11:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:12:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:13:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:14:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:15:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:16:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:17:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:18:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:19:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:20:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:21:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:22:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:23:00:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[Multiple Values]</rows>
        <cols>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='时-空驶率'>
      <table>
        <view>
          <datasources>
            <datasource caption='terdt' name='textscan.02k4asg16f8dw21a5u2jk0h1z7uk' />
          </datasources>
          <datasource-dependencies datasource='textscan.02k4asg16f8dw21a5u2jk0h1z7uk'>
            <column caption='空驶率' datatype='real' name='[Calculation_272186356899512325]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([F3])' />
            </column>
            <column caption='时' datatype='integer' name='[F2]' role='dimension' type='quantitative' />
            <column caption='raw空驶率' datatype='real' name='[F3]' role='measure' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F3]' derivation='None' name='[none:F3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_272186356899512325]' derivation='User' name='[usr:Calculation_272186356899512325:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]' field-type='quantitative' max='24' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='14'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[usr:Calculation_272186356899512325:qk]</rows>
        <cols>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>时: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]&gt;</run>
              <run fontcolor='#787878'>&#10;空驶率: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>0.80876773999999996</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>时: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]&gt;</run>
              <run fontcolor='#787878'>&#10;空驶率: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>8</value>
                    <value>0.38701101999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>上午8点</run>
              <run fontcolor='#787878'>&#10;空驶率最低值: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[usr:Calculation_272186356899512325:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[usr:Calculation_272186356899512325:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[usr:Calculation_272186356899512325:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>8</value>
                    <value>0.47476447333333333</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='94' y='89' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>凌晨4点</run>
              <run fontcolor='#787878'>&#10;空驶率最高值: </run>
              <run bold='true'>&lt;[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[usr:Calculation_272186356899512325:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[usr:Calculation_272186356899512325:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F2:qk]</field>
                      <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[usr:Calculation_272186356899512325:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>0.76601932000000028</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='152' y='-4' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='某(全)汽车在某一天内的24个整点时段的平均行驶速度曲线'>
      <table>
        <view>
          <datasources>
            <datasource caption='8105tx24' name='textscan.08bretg0xjsc3d1cmkyhr1lqut3w' />
          </datasources>
          <datasource-dependencies datasource='textscan.08bretg0xjsc3d1cmkyhr1lqut3w'>
            <column datatype='real' name='[0:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[10:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[11:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[12:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[13:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[14:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[15:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[16:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[17:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[18:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[19:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[1:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[20:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[21:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[22:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[23:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[2:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[3:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[4:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[5:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[6:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[7:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[8:00]' role='measure' type='quantitative' />
            <column datatype='real' name='[9:00]' role='measure' type='quantitative' />
            <column-instance column='[0:00]' derivation='Attribute' name='[attr:0:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10:00]' derivation='Attribute' name='[attr:10:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11:00]' derivation='Attribute' name='[attr:11:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12:00]' derivation='Attribute' name='[attr:12:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13:00]' derivation='Attribute' name='[attr:13:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14:00]' derivation='Attribute' name='[attr:14:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[15:00]' derivation='Attribute' name='[attr:15:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[16:00]' derivation='Attribute' name='[attr:16:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[17:00]' derivation='Attribute' name='[attr:17:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[18:00]' derivation='Attribute' name='[attr:18:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[19:00]' derivation='Attribute' name='[attr:19:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1:00]' derivation='Attribute' name='[attr:1:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[20:00]' derivation='Attribute' name='[attr:20:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[21:00]' derivation='Attribute' name='[attr:21:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22:00]' derivation='Attribute' name='[attr:22:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23:00]' derivation='Attribute' name='[attr:23:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2:00]' derivation='Attribute' name='[attr:2:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3:00]' derivation='Attribute' name='[attr:3:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4:00]' derivation='Attribute' name='[attr:4:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5:00]' derivation='Attribute' name='[attr:5:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6:00]' derivation='Attribute' name='[attr:6:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7:00]' derivation='Attribute' name='[attr:7:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8:00]' derivation='Attribute' name='[attr:8:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9:00]' derivation='Attribute' name='[attr:9:00:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[0:00]' derivation='Sum' name='[sum:0:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10:00]' derivation='Sum' name='[sum:10:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11:00]' derivation='Sum' name='[sum:11:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12:00]' derivation='Sum' name='[sum:12:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13:00]' derivation='Sum' name='[sum:13:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14:00]' derivation='Sum' name='[sum:14:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[15:00]' derivation='Sum' name='[sum:15:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[16:00]' derivation='Sum' name='[sum:16:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[17:00]' derivation='Sum' name='[sum:17:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[18:00]' derivation='Sum' name='[sum:18:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[19:00]' derivation='Sum' name='[sum:19:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1:00]' derivation='Sum' name='[sum:1:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[20:00]' derivation='Sum' name='[sum:20:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[21:00]' derivation='Sum' name='[sum:21:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22:00]' derivation='Sum' name='[sum:22:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23:00]' derivation='Sum' name='[sum:23:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2:00]' derivation='Sum' name='[sum:2:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3:00]' derivation='Sum' name='[sum:3:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4:00]' derivation='Sum' name='[sum:4:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5:00]' derivation='Sum' name='[sum:5:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6:00]' derivation='Sum' name='[sum:6:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7:00]' derivation='Sum' name='[sum:7:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8:00]' derivation='Sum' name='[sum:8:00:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9:00]' derivation='Sum' name='[sum:9:00:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:0:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:1:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:2:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:3:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:4:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:5:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:6:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:7:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:8:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:9:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:10:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:11:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:12:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:13:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:14:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:15:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:16:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:17:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:18:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:19:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:20:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:21:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:22:00:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:23:00:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:0:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:1:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:2:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:3:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:4:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:5:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:6:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:7:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:8:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:9:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:10:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:11:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:12:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:13:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:14:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:15:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:16:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:17:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:18:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:19:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:20:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:21:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:22:00:qk]&quot;</bucket>
              <bucket>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[sum:23:00:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[none:name:nk]' />
              <lod column='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[Multiple Values]</rows>
        <cols>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='某车某天行驶路线（空载）'>
      <table>
        <view>
          <datasources>
            <datasource caption='粤B41W57' name='textscan.09a7h9t0bssy2x12mqkvz0enz22d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.09a7h9t0bssy2x12mqkvz0enz22d'>
            <column-instance column='[status]' derivation='Attribute' name='[attr:status:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[jd]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[jd]' derivation='None' name='[none:jd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='None' name='[none:time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wd]' derivation='None' name='[none:wd:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[status]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour-Trunc' name='[thr:time:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[wd]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[dy:time:ok]'>
            <groupfilter function='member' level='[dy:time:ok]' member='19' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[dy:time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:jd:qk]' field-type='quantitative' max='12706976.028021533' min='12662151.759460788' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:wd:qk]' field-type='quantitative' max='2597045.9290713249' min='2568327.5792143415' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]' palette='tableau-orange-white-blue' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[attr:status:ok]' value='载客状态(status)：&#10;0为空载；1为载客'>
              <formatted-text>
                <run>载客状态(status)：&#10;0为空载；1为载客</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[attr:status:ok]' />
              <text column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[thr:time:ok]' />
              <path column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:wd:qk]</rows>
        <cols>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:jd:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='某车某天行驶路线（路径）'>
      <table>
        <view>
          <datasources>
            <datasource caption='粤B41W57' name='textscan.09a7h9t0bssy2x12mqkvz0enz22d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.09a7h9t0bssy2x12mqkvz0enz22d'>
            <column-instance column='[time]' derivation='Day' name='[dy:time:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[jd]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[jd]' derivation='None' name='[none:jd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='None' name='[none:time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wd]' derivation='None' name='[none:wd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Hour-Trunc' name='[thr:time:qk]' pivot='key' type='quantitative' />
            <column datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[wd]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[dy:time:ok]'>
            <groupfilter function='member' level='[dy:time:ok]' member='19' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[dy:time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:jd:qk]' field-type='quantitative' max='12715754.095736662' min='12662264.267942995' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:wd:qk]' field-type='quantitative' max='2598279.9017488393' min='2569571.7631255225' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]' palette='area-red-green' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[thr:time:qk]' palette='area-red-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]' />
              <text column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[thr:time:qk]' />
              <path column='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:wd:qk]</rows>
        <cols>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:jd:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='每车均速'>
      <table>
        <view>
          <datasources>
            <datasource caption='avgv均速' name='textscan.05uep4i041iexe1gelwmb1kktu2k' />
          </datasources>
          <datasource-dependencies datasource='textscan.05uep4i041iexe1gelwmb1kktu2k'>
            <column caption='频数' datatype='integer' name='[Calculation_272186356899512320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(ROUND([F2]))' />
            </column>
            <column caption='平均速度' datatype='real' name='[Calculation_272186356899512322]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND( [F2])' />
            </column>
            <column caption='v' datatype='real' name='[F2]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_272186356899512322]' derivation='None' name='[none:Calculation_272186356899512322:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_272186356899512320]' derivation='User' name='[usr:Calculation_272186356899512320:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.05uep4i041iexe1gelwmb1kktu2k].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[textscan.05uep4i041iexe1gelwmb1kktu2k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.05uep4i041iexe1gelwmb1kktu2k].[usr:Calculation_272186356899512320:qk]</rows>
        <cols>[textscan.05uep4i041iexe1gelwmb1kktu2k].[none:Calculation_272186356899512322:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>总体平均速度: 33.79</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='34.19828326180258'>
                  <node-reference>
                    <axis>[textscan.05uep4i041iexe1gelwmb1kktu2k].[none:Calculation_272186356899512322:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='925.13814432989693'>
                  <node-reference>
                    <axis>[textscan.05uep4i041iexe1gelwmb1kktu2k].[usr:Calculation_272186356899512320:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='428'>
    <window class='worksheet' name='每车均速'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[textscan.05uep4i041iexe1gelwmb1kktu2k].[none:Calculation_272186356899512322:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[textscan.05uep4i041iexe1gelwmb1kktu2k].[usr:Calculation_272186356899512320:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[textscan.05uep4i041iexe1gelwmb1kktu2k].[none:Calculation_272186356899512322:qk]</field>
                  <field>[textscan.05uep4i041iexe1gelwmb1kktu2k].[usr:Calculation_272186356899512320:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>34.0</value>
                <value>928</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.05uep4i041iexe1gelwmb1kktu2k].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='天-空驶率'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[dy:F1:ok]</field>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[hr:F2:ok]</field>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F1:qk]</field>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]</field>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[thr:F2:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='时-空驶率'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[dy:F1:ok]</field>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[hr:F2:ok]</field>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[none:F3:qk]</field>
            <field>[textscan.02k4asg16f8dw21a5u2jk0h1z7uk].[thr:F2:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='坐标-空驶'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F4:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F4:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F1:qk]</field>
            <field>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F2:qk]</field>
            <field>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F3:qk]</field>
            <field>[textscan.1i3s1it1nwpqtp19hldx80iklb4l].[none:F4:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='某(全)汽车在某一天内的24个整点时段的平均行驶速度曲线'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[none:name:nk]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[none:name:nk]</field>
                  <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</field>
                  <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;粤B00G29&quot;</value>
                <value>&quot;[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[attr:13:00:qk]&quot;</value>
                <value>49.666666669999998</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</field>
            <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='总体24小时平均'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[:Measure Names]</field>
            <field>[textscan.08bretg0xjsc3d1cmkyhr1lqut3w].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='出租车画像3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0e1dny30oxe8mt1dly0a70i60cow].[:Measure Names]</field>
            <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[:Measure Names]</field>
            <field>[textscan.1hx8qdl1rl58o9164attw0whtz2l].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='出租车画像5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1ypwl6z17528p4190lv1r0zc0x8d].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='出租车画像7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[:Measure Names]</field>
            <field>[excel-direct.0sfq5pm1mehb9i1dc2t4f1hgeav0].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='某车某天行驶路线（路径）'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[dy:time:ok]</field>
            <field>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]</field>
            <field>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='某车某天行驶路线（空载）'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[attr:status:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[attr:status:ok]</field>
            <field>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[dy:time:ok]</field>
            <field>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[none:time:qk]</field>
            <field>[textscan.09a7h9t0bssy2x12mqkvz0enz22d].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='估计出整条路上汽车的平均速度'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='下客点分布'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0x9qyjx0qlelg81abzh62085wldi].[none:F1:qk]</field>
            <field>[textscan.0x9qyjx0qlelg81abzh62085wldi].[none:F2:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='上客点分布'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='DBSCAN聚类下车点'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1evssiv1i1mj34188wwd21tz7eo0].[none:F4:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='DBSCAN聚类上车点5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0iwu1t31a95ujd18r6yw20m67k3x].[none:F4:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='DBSCAN聚类上车点12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0jykr2r1niih9a13vyvec1145els].[none:F4:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='每车均速' width='192'>
      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
      D3gjcL42mUMHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='天-空驶率' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='时-空驶率' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='坐标-空驶' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='某(全)汽车在某一天内的24个整点时段的平均行驶速度曲线' width='192'>
      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
      fX0Xxw7Gj/5fdg/NTdxBKBMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='总体24小时平均' width='192'>
      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
      cn37l/wGFvwohRgd7YNkhiLkFRfhuNvQJ6JBQqgZ7WpD582ld2iMqsK7FSOZYG42SDg0z7Q/
      gaDpIMu9Z8mvf8GPSojQ2jFGOBInrzAf692GPh4JEhXUDLc3Y8jIp38sm7Lsuy8wGWNuPsyi
      fwZ/VIFK2066a3nS7p/3oyJES/sUsZhIfn4OprsNvdVTyI66BZI6E8UFOXhNy+NUhdbMvt11
      BBfDZBSX4PFkLNv0NvbvriEcjpFVXIzXJxVdVc0eFuaDZOrSyEz3Sl6qO6uCmio/KpuTwpx0
      bCnhYKXByf7dNUTjIjlFRfgypK1mzY69+P0hci0+0r1eSfTNl1dD1WQAnctDfpaH1L5DaXJz
      YE8NCVFJblEhGZkpmWlBYOeu3QT8IQqdmXhXrO/KKthB5UQAozed/CwvqTMslcXHvt1VJAQV
      +cWFZKb0koJSxZ7dO1n0L1Lqy8HjkTakucW7mZ5cxJqRQ16Wh3tN2rpNgucn+rnaNMjxl47h
      yizClTIHiUcWuXntEjk7nsZttUrWf4hikt6eZqYjZvZXZlNcLg2nzY71crV5lBdfOkpaVin2
      lFFOLOjn+pWLFB94EZfVRmne8o9OJhN0dzcRwEldcTplFVUSv9Oj3VxtmeSVF/fjzi3HkjLK
      iQRmabhyiapnXsFptVOUuTx8SibidHbcIqbPoCLXQ0Wl1O/EcCfX22f59Au7cOdVSpYACAol
      owPd9LTe5vS5y8yHUocOAuG5CQZGh6l/7xS9kjVRAouz4wwMD1B/sp6BsRnpw49H6O3v4+qH
      Z7jZ3E0yJUukUKoZ6uugs/E6Z89fIyRZDSfgnx5lYLCP+lOnGZ6UJruIBukZ6OfSB6dpbOtD
      lPjVMNjTTtvNq3xwoYGwKEj8zk0M09/fTX39WUan/RKbGArQMzTAhbP1NHVIk10KlYb+7jZa
      rl/mw0s3iKbcUxBgZnyIvt4uTp8+x8RcQOI3uThH9/AQ5+rrae0ekvpVqunrbqPp2kUuXmkk
      ere869YDxCMhouFFTtefpajuqCRRp0Ak6A/T2HAOsz1rVVIqGAozMzTAxTkLLxfslthikSDR
      sJ/3689Rvuc40secIBSIcP3KGWxpeShT/AqCSDAYZnKwmavTNj5dtk/qNxwiGp7nVP15qg6+
      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
      B3lnFNtuNiESAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='出租车画像3' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='出租车画像5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='出租车画像7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='某车某天行驶路线（路径）' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='某车某天行驶路线（空载）' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='估计出整条路上汽车的平均速度' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAYAAACRfFAzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABmUlEQVR4nO3SQQ0AIBDAMMC/58MDH7KkVbDH9szMgpjzOwBeGJck45JkXJKMS5JxSTIu
      ScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45Jk
      XJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYl
      ybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKM
      S5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgk
      GZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5Jx
      STIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck
      45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuSRePYgUc7kJNEQAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='下客点分布' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='上客点分布' width='192'>
      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
      N8j7oB4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DBSCAN聚类下车点' width='192'>
      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
      G7gL/Cfj6SGgAhl2MQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DBSCAN聚类上车点5' width='192'>
      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
      42Me4hJCCf8/a19IE4TIMsAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DBSCAN聚类上车点12' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
